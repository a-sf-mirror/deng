@include{jake.ah}
@macro{TITLE}{ Doomsday Engine Definitions Reference }
@macro{VERSION}{ (or "Knee-Deep In The DED") @br Version 1.0 }
@include{amestd}
@include{darktable}
@begin

CONTENTS: @contents{1 2}

@chapter{ Overview }
$ What are DED files, and what can be achieved by them.
$ An overview to the way DED files are organized.

Doomsday Engine Definition (DED) files use the file name extension
@file{.ded}.

@section{ Standard DED files }
$ The names and uses the DED files in j-ports.

Included in the main Game distribution (all of these are in the
@file{ Defs\<Game>\ } directory):

@table{25 75}{
	@file{<Game>.ded} @tab
	The primary DED of the Game. Included automatically by default.
	Includes the other standard DED files.
@row
	@file{Objects.ded} @tab
	All Thing and State definitions. Defines all @opt{mf_*} (and
	@opt{mf2_*}) flags.
@row
	@file{Sprites.ded} @tab
	Sprite definitions.
@row
	@file{Special.ded} @tab
	Particle generator definitions. Defines @opt{gnf_*} and @opt{ptf_*}
	flags.
@row
	@file{Lights.ded} @tab
	Light definitions. Defines @opt{lgf_*} flags.
@row
	@file{Details.ded} @tab
	Detail texture definitions.
@row
	@file{Audio.ded} @tab
	Sound, Music and Texture Environment definitions.
	Defines @opt{sf_*} flags.
@row
	@file{Maps.ded} @tab
	Map Info definitions. Defines all @opt{mif_*} and @opt{slf_*} flags.
@row
	@file{Finales.ded} @tab
    Finale/interlude scripts.
@row
	@file{Text.ded} @tab
	Text definitions.
@row
	@file{Values.ded} @tab
  	Value definitions (custom string pairs).
@row
	@file{Models.ded} @tab
	Defines model flags (@opt{df_*}) and groups (@opt{mg_*}) and includes the
	top-level model definition files (e.g. @file{Monsters.ded},
	@file{HUDWeapons.ded}). @file{Models.ded} contains nothing else
	(no actual Model definitions).
@row
	@file{User.ded} @tab
	Any custom definitions. Not included in regular distributions (so the
	user's customizations won't be overwritten).
}

Default grouping of model definitions (really depends on the Game):

@table{25 75}{
@file{Monsters.ded} @tab Enemies @row
@file{Weapons.ded} @tab Weapons and ammo (items) @row
@file{Items.ded} @tab Items @row
@file{Players.ded} @tab Players @row
@file{HUDWeapons.ded} @tab HUD weapons (psprites) @row
@file{Technology.ded} @tab Technology-related decorations @row
@file{Nature.ded} @tab Nature decorations: plants, rocks, etc. @row
@file{Decorations.ded} @tab Other decorations @row
@file{FX.ded} @tab Special (model-related) effects (fire, explo)
}

@section{ Syntax }
$ What Doomsday expects of DED files; what kind of a syntax do DEDs use.

@subsec{Comments}

There are two kinds of comments: line comments and delimited comments.
Line comments begin with a hash character (#) and continue until the end of
the line. The parser will skip everything on the line after the # character.
Delimited comments begin with a @opt{#>} symbol and continue
until a @opt{<#} symbol is found. An example:

@code{#> The comment begins... @br And continues @br ...and ends here <#}

@subsec{Header block}

Use of the Header block is optional but it is recommended that you at
least use a version declaration.

@code{Header @{ Version = 5; @} }

@subsec{Directives}

Directives are commands that control the DED reader.
They are composed of a keyword and a variable number of
parameters. All directives end in a semicolon (;).

@code{Include "Models.ded";}

@subsec{Definition blocks}

A DED file contains a number of directives and definition blocks.
A definition block begins with a keyword that determines the block's
type, followed by a number of keys and sub-blocks contained
in a 'block' of curly brackets @{, @}. Each key and sub-block must
end in a semicolon (;) but there mustn't be one after
the @} that ends the definition block itself.

@ind{@pre{Text @{
  ID = "PRESSYN";
  Text = "press y or n.";
@}}}

@subsec{Attributes}

Attributes are optional and appear in front of the keywords that begin
definition blocks. Currently there is only one attribute, and even it can't
be used with all types of definitions: @opt{Copy}. An asterisk (@opt{*})
can be used as an abbreviation of @opt{Copy}, which is convenient with
model definitions.

@subsec{Keys}

Each type of definition is composed of a number of keys, each representing
some property of the definition. For example, the Text definition above:

@ind{@pre{Text @{
  ID = "PRESSYN";
  Text = "press y or n.";
@}}}

The Text definition has the @opt{ID} and @opt{Text} keys. Both
take a value of type 'string'.

@subsec{String values}

Strings begin and end in double quotation marks ("). If newline
characters are found inside a string (the string has been divided onto
multiple lines) the newline and all following whitespace are skipped, and
the actual string continues from the first non-whitespace character that
follows.

$ Describes each type of definition in detail, discussion about important
$ notes and uses.
@chapter{ Directives }

@code{Include "Other.ded";}

The @opt{Include} directive causes the parser to read the given DED
file. Included files are read @em{after} the file from which they were
included.

@code{
	IncludeIf -opt "Other.ded"; @br
	IncludeIf Not -opt "Other.ded";
}

The given DED file is included if the option @opt{-opt} is (not)
found in the command line.

@code{
	SkipIf -opt; @br
	SkipIf Not -opt;
}

The rest of the file is skipped if the option @opt{-opt} is (not)
found in the command line.

@code{ModelPath "MD2\Game\Item";}

The @opt{ModelPath} directive appends a new path to the list of model
search paths.

@notice{ This directive has no scope: it affects all the definitions
that come before and after it. Also, be careful with backslashes.
Since they are used as escape characters in strings you can't
for example do this: @opt{"MD2\Game\Path\"}. That would mean the
last character of the path is @opt{"} but the string itself doesn't end.
You can use forward slashes instead of backslashes.}

@chapter{ Objects }
@section{ Sprite }
@section{ State }
@section{ Thing }
@section{ Model }

@chapter{ Properties }
@section{ Light }
@section{ Detail }
@section{ Texture Environment }
@section{ Map Info }

@chapter{ Audio }
@section{ Sound }
@section{ Music }

@chapter{ Effects }
@section{ Generator }

@chapter{ Information }
@section{ Text }
@section{ Values }

@chapter{ Other definitions }
@section{ Finale }



